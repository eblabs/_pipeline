{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"add",
				"addMatrix"
			],
			[
				"m",
				"multiplyDivide"
			],
			[
				"sV",
				"sVersionComponent"
			],
			[
				"sComp",
				"sComponentWipFolder"
			],
			[
				"sv",
				"sVersionName"
			],
			[
				"sCom",
				"sComponentWipFolder"
			],
			[
				"sCurren",
				"sCurrentVersionComponent"
			],
			[
				"sCo",
				"sComponentDir"
			],
			[
				"sD",
				"sDirectoryAsset"
			],
			[
				"version",
				"versionInfo"
			],
			[
				"ass",
				"assetInfo"
			],
			[
				"sCurre",
				"sCurrentVersionComponent"
			],
			[
				"versi",
				"versionInfo"
			],
			[
				"vers",
				"versionInfo"
			],
			[
				"sC",
				"sCurrentVersionName"
			],
			[
				"compo",
				"componentInfo"
			],
			[
				"comonen",
				"componentInfo"
			],
			[
				"com",
				"componentInfo"
			],
			[
				"sA",
				"sAssetWipDir"
			],
			[
				"dCo",
				"dComponents"
			],
			[
				"list",
				"listRelatives"
			],
			[
				"lD",
				"lDrivenVal"
			],
			[
				"world",
				"worldUpObject"
			],
			[
				"atta",
				"attachNodeToPntOnCrvInfo"
			],
			[
				"sM",
				"sMotionPath"
			],
			[
				"att",
				"attachNodeToMotionPath"
			],
			[
				"mo",
				"motionPath"
			],
			[
				"path",
				"pathAnimation"
			],
			[
				"sCr",
				"sCrv"
			],
			[
				"crea",
				"createChainJnt"
			],
			[
				"f",
				"fParameter"
			],
			[
				"get",
				"getMeshCenterPivot"
			],
			[
				"fT",
				"fTxAvg"
			],
			[
				"sAss",
				"sAssetDir"
			],
			[
				"_crea",
				"_createVersionFile"
			],
			[
				"sFile",
				"sFileType"
			],
			[
				"wip",
				"wipFiles"
			],
			[
				"sAsset",
				"sAssetDir"
			],
			[
				"sPathT",
				"sPathTypeSync"
			],
			[
				"sPathSou",
				"sPathSource"
			],
			[
				"sPathSour",
				"sPathSourceType"
			],
			[
				"sPaths",
				"sPathSource"
			],
			[
				"sPathS",
				"sPathSource"
			],
			[
				"pu",
				"_publishCmd"
			],
			[
				"QLa",
				"QLayoutButton"
			],
			[
				"ref",
				"_refreshFileList"
			],
			[
				"lF",
				"lFoldersSource"
			],
			[
				"sFo",
				"sFolderListName"
			],
			[
				"lR",
				"lProjects"
			],
			[
				"sProje",
				"sProjectSel"
			],
			[
				"sync",
				"syncAsset"
			],
			[
				"sAs",
				"sAssetSel"
			],
			[
				"sPr",
				"sProjectSel"
			],
			[
				"sPath",
				"sPathSyc"
			],
			[
				"sPa",
				"sPathSync"
			],
			[
				"sP",
				"sPathServer"
			],
			[
				"sFolder",
				"sFolder"
			],
			[
				"create",
				"createFolder"
			],
			[
				"sPro",
				"sProject"
			],
			[
				"_get",
				"_getFoldersFromFolderList"
			],
			[
				"sFol",
				"sFolderListName"
			],
			[
				"sPah",
				"sPathServer"
			],
			[
				"_cre",
				"_createFolderListFile"
			],
			[
				"sS",
				"sStatusProjectSel"
			],
			[
				"sT",
				"sTypeSel"
			],
			[
				"oL",
				"oLayout_project"
			],
			[
				"QLay",
				"QLayoutButton"
			],
			[
				"QPush",
				"QPushButtonRefresh"
			],
			[
				"setM",
				"setMaximumWidth"
			],
			[
				"QP",
				"QPushButtonRefresh"
			],
			[
				"dA",
				"dAssetData"
			],
			[
				"sPat",
				"sPathLocal_type"
			],
			[
				"iV",
				"iVersionServer"
			],
			[
				"dAss",
				"dAssetDataLocal"
			],
			[
				"iI",
				"iIndexSource"
			],
			[
				"lTy",
				"lTypes"
			],
			[
				"iIndex",
				"iIndexSource"
			],
			[
				"oLay",
				"oLayout"
			],
			[
				"ol",
				"oLayout_project"
			],
			[
				"lA",
				"lAssets"
			],
			[
				"key",
				"keys"
			],
			[
				"lP",
				"lProjects"
			],
			[
				"QTree",
				"QTreeView"
			],
			[
				"lFi",
				"lFiles_local"
			],
			[
				"Q",
				"QTreeView"
			],
			[
				"setP",
				"setProjectList"
			],
			[
				"_",
				"_setList"
			],
			[
				"QLayoutB",
				"QLayoutButton"
			],
			[
				"QL",
				"QLayoutButton"
			],
			[
				"sy",
				"syncAssetLayout"
			],
			[
				"QM",
				"QMessageBox"
			],
			[
				"b",
				"bModified"
			],
			[
				"_ge",
				"_getCurrentVersion"
			],
			[
				"d",
				"dAssetData"
			],
			[
				"cur",
				"currentIndex"
			],
			[
				"QTr",
				"QTreeView_version"
			],
			[
				"QS",
				"QSourceModel_version"
			],
			[
				"curre",
				"currentIndex"
			],
			[
				"QTre",
				"QTreeView_version"
			],
			[
				"sF",
				"sFileDelete"
			],
			[
				"sName",
				"sNamespace"
			],
			[
				"dir",
				"dirname"
			],
			[
				"click",
				"clicked"
			],
			[
				"curr",
				"currentItem"
			],
			[
				"QT",
				"QTreeView_version"
			],
			[
				"_g",
				"_getFoldersThroughPath"
			],
			[
				"sp",
				"sPath"
			],
			[
				"ch",
				"isChecked"
			],
			[
				"set",
				"setProject"
			],
			[
				"cl",
				"close"
			],
			[
				"s",
				"sComment"
			],
			[
				"QLine",
				"QLineEditTag"
			],
			[
				"_set",
				"_setPath"
			],
			[
				"QPu",
				"QPushButtonPath"
			],
			[
				"_li",
				"_listType"
			],
			[
				"QComboBoxP",
				"QComboBoxType"
			],
			[
				"_l",
				"_listAssets"
			],
			[
				"QC",
				"QComboBoxAsset"
			],
			[
				"setPa",
				"setPathWin"
			],
			[
				"QLayou",
				"QLayoutBase"
			],
			[
				"Qt",
				"QtGui"
			],
			[
				"QLab",
				"QLabelProject"
			],
			[
				"QLabelT",
				"QLabelType"
			],
			[
				"QLineE",
				"QLineEditComment"
			],
			[
				"QLabel",
				"QLabelTag"
			],
			[
				"sVer",
				"sVersion"
			],
			[
				"lV",
				"lVersions"
			],
			[
				"l",
				"lVersionFiles"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "## External Import\nimport maya.cmds as cmds\nimport json\nimport os\nfrom shutil import rmtree\n## Vars\nlAssetTypes = ['model', 'rig']\nimport getpass\nsUser = getpass.getuser()\nsPathServer = os.path.abspath('C:/Users/%s/Dropbox/_works/maya/' %sUser)\nsPathLocal = os.path.abspath('C:/_works/maya/')\n\niBackup = 20\nsFileType = '.mb'\nsFolderListName = 'folders.folderList'\nlProjectFolders = ['assets']\ndRiggingComponents = {\n\t\t\t\t\t\t'buildScript': ['.py'], \n\t\t\t\t\t\t'blueprint': ['.blueprint'], \n\t\t\t\t\t\t'rigGeometry': [sFileType], \n\t\t\t\t\t\t'geoHierarchy': ['.geoHierarchy'], \n\t\t\t\t\t\t'deformer': ['.deformer'], \n\t\t\t\t\t\t'controlShape': ['.ctrlShape']\n\t\t\t\t\t}\n\n#### Functions\ndef writeJsonFile(sPath, data):\n\twith open(sPath, 'w') as sOutfile:\n\t\tjson.dump(data, sOutfile)\n\tfile.close(sOutfile)\n\ndef readJsonFile(sPath):\n\tif not os.path.exists(sPath):\n\t\traise RuntimeError('The file is not exist')\n\tprint sPath\n\twith open(sPath, 'r') as sInfile:\n\t\tdata = json.load(sInfile)\n\tfile.close(sInfile)\n\treturn data\n\ndef createFolder(sDirectory):\n\tif not os.path.exists(sDirectory):\n\t\tos.makedirs(sDirectory)\n\t\tcmds.warning('%s did not exist, created the folders' %sDirectory)\n\ndef openFolderFromPath(sPath):\n\tif os.path.exists(sPath):\n\t\tos.startfile(sPath)\n\telse:\n\t\tcmds.warning('%s does not exist' %sPath)\n\ndef deleteFolderFromPath(sPath):\n\tshutil.rmtree(sPath)\n\tprint 'Delete %s sucessfully' %sPath\n\n\ndef getFilesFromPath(sPath, sType = None):\n\tlFiles = os.listdir(sPath)\n\tos.chdir(sPath)\n\tlFilesReturn = []\n\tif not sType:\n\t\tlFilesReturn = lFiles\n\telse:\n\t\tfor sFile in lFiles:\n\t\t\tif sType == 'folder':\n\t\t\t\tif not os.path.isfile(sFile):\n\t\t\t\t\tlFilesReturn.append(sFile)\n\t\t\telif sType == 'file':\n\t\t\t\tif os.path.isfile(sFile):\n\t\t\t\t\tlFilesReturn.append(sFile)\n\t\t\telse:\n\t\t\t\tif sFile.endswith(sType):\n\t\t\t\t\tlFilesReturn.append(sFile)\n\treturn lFilesReturn\n\n#### sub Functions\ndef _getFoldersThroughPath(sPath):\t\n\tsPathDir = os.path.abspath(sPath)\n\tsPathBase = os.path.basename(sPathDir)\n\tsPathDir = os.path.dirname(sPathDir)\n\tlFolders = sPathDir.split('\\\\')\n\tlFolders.append(sPathBase)\n\treturn lFolders\n\ndef _getBaseFileFromPath(sPath):\n\tsPathDir = os.path.abspath(sPath)\n\tsFile = os.path.basename(sPathDir)\n\treturn sFile\n\ndef _convertStringToCamelcase(sString):\n\tif '_' in sString:\n\t\tsStringParts = sString.split('_')\n\t\tsString = ''\n\t\tfor sPart in sStringParts:\n\t\t\tsString += sPart[0].upper() + sPart[1:]\n\tif ' ' in sString:\n\t\tsStringParts = sString.split(' ')\n\t\tsString = ''\n\t\tfor sPart in sStringParts:\n\t\t\tsString += sPart[0].upper() + sPart[1:]\n\tsString = sString[0].lower() + sString[1:]\n\treturn sString\n",
			"file": "common/files.py",
			"file_size": 2674,
			"file_write_time": 131506605252887833,
			"settings":
			{
				"buffer_size": 2572,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "common/workspaces.py",
			"settings":
			{
				"buffer_size": 14842,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "riggingAPI/rigComponents.py",
			"settings":
			{
				"buffer_size": 290,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "namingAPI/namingDict.py",
			"settings":
			{
				"buffer_size": 1561,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "namingAPI/naming.py",
			"settings":
			{
				"buffer_size": 142,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "common/transforms.py",
			"settings":
			{
				"buffer_size": 748,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "UI/assetsManagerUI.py",
			"settings":
			{
				"buffer_size": 16702,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pack",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 468.0
	},
	"console":
	{
		"height": 283.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/_pipeline/maya/namingAPI/__init__.py",
		"/C/_works/maya/BromProject/assets/chrBrom/rig/assetInfo.version",
		"/C/Users/harri/Desktop/retazRig.py",
		"/C/_works/maya/BromProject/assets/chrBrom/folders.folderList",
		"/C/_pipeline/maya/UI/saveAssetUI.py",
		"/C/_pipeline/maya/UI/syncAssetsUI.py",
		"/C/_pipeline/maya/UI/baseUI.py",
		"/C/_pipeline/maya/UI/assetsManagerUI.py",
		"/C/_pipeline/maya/common/workspaces.py",
		"/C/_pipeline/maya/common/files.py",
		"/C/Users/harri/Documents/maya/scripts/userSetup.py",
		"/C/_pipeline/maya/common/assetsManagerUI.py",
		"/C/_pipeline/maya/common/testFunc.py",
		"/C/_pipeline/maya/common/baseUI.py",
		"/C/_pipeline/maya/common/syncAssetsUI.py",
		"/C/_pipeline/maya/common/saveAssetUI.py",
		"/C/Users/harri/Desktop/test.py",
		"/C/_works/maya/BromProject/assets/chrBrom/model/assetInfo.version",
		"/C/_works/maya/folders.folderList",
		"/C/_works/maya/testRename/assets/folders.folderList",
		"/C/Users/harri/Downloads/PyQt4_gpl_win-4.12.1/examples/itemviews/customsortfiltermodel.pyw",
		"/C/Users/harri/Downloads/PyQt4_gpl_win-4.12.1/examples/itemviews/basicsortfiltermodel.pyw",
		"/C/Users/harri/Dropbox/Projects/SCRIPTS/uvBaseMeshRemapTool_forMaya02.py",
		"/C/Users/harri/Dropbox/Projects/SCRIPTS/Tools/wip_ui4.py",
		"/C/Users/harri/AppData/Local/Microsoft/Windows/INetCache/IE/8QF24N0T/shutil[1].py",
		"/C/Users/harri/Documents/maya/2016/Maya.env",
		"/C/Users/harri/Dropbox/_works/maya/folders.folderList",
		"/C/_works/maya/testRename/assets/asset2/folders.folderList",
		"/C/Users/harri/Dropbox/_works/maya/testRename/assets/asset2/folders.folderList",
		"/C/Users/harri/AppData/Local/Microsoft/Windows/INetCache/IE/04B80UZL/file_util[1].py",
		"/C/Users/harri/Dropbox/_works/folders.folderList",
		"/C/Users/harri/AppData/Local/Microsoft/Windows/INetCache/IE/PK6JRSZA/shutil[1].py",
		"/C/_pipeline/maya/common/syncAssetUI.py",
		"/C/_works/maya/testRename/assets/asset2/model/assetInfo.version",
		"/C/_pipeline/maya/common/assetManagerUI.py",
		"/C/_works/maya/testRename/assets/asset1/model/assetInfo.version",
		"/C/_works/maya/test3/assets/SSSSS/model/assetInfo.version",
		"/C/_works/maya/cartoonChar/assets/chrLuffy/model/assetInfo.version",
		"/C/_works/maya/test3/assets/asset1/model/assetInfo.version",
		"/C/_works/maya/test3/assets/renameS/model/assetInfo.version",
		"/C/_works/maya/test3/assets/renameS/folders.folderList",
		"/C/_works/maya/Test/assets/chrHarris01/model/assetInfo.version",
		"/C/_pipeline/maya/common/workspacesUI.py",
		"/C/Users/harri/Dropbox/Projects/SCRIPTS/Tools/symmetricalTool.py",
		"/C/_pipeline/maya/common/workspace.py",
		"/C/_pipeline/maya/commonAPI.py",
		"/C/_pipeline/maya/pipelineMaya.sublime-project",
		"/C/_pipeline/__init__.py"
	],
	"find":
	{
		"height": 55.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"_getFoldersFromFolderList",
			"getFoldersThroughPath",
			"_getVersionFiles",
			"update",
			"_getAssetFile",
			"_getVersionInfo",
			"sFileDelete",
			"_createVersionFile",
			"_addVersion",
			"lVersions",
			"sEndTime",
			"sStartTime",
			"print",
			"getFileInfoFromLocalAndServer",
			"os.remove",
			"open",
			"stat",
			"copyfile",
			"_getSelectItem",
			"self.QLabel_file",
			"setCurrentIndex",
			"currentIndex",
			"self.dAssetData",
			".data",
			"QSourceModel_ver",
			"QSource",
			"QModelIndex",
			"QSourceModel_version",
			"'sType'",
			"_getAssetFile",
			"_getFoldersThroughPath",
			"self.sPath",
			"_getFoldersThroughPath",
			"sPathSource",
			"os.path.join(os.path.join(self.oLayout_type.sPath, currentItem))",
			"version.isChecked()",
			"lQ",
			"bCheck",
			"_getAssetFolder",
			"sPathLocal",
			"_listItemRightClicked",
			"getFoldersTh",
			"os.path",
			"_setPushButtonEnabled",
			"_createVersionFile",
			"_getProject",
			"QMenuItem_rename",
			"getFilesFromPath",
			"_getVersionInfo",
			"_refreshVersion",
			"fileTreeView",
			"FileList",
			"_writeFileListFile",
			"_writeFolderListFile",
			"createFileListFile",
			"readJsonFile",
			"sFileList",
			"rebuildListModel",
			"_getAssetDirectory",
			"readJsonFil",
			"versionFile",
			"rowCount",
			"self.QSourceModel",
			"sPathListItem",
			"bListItemClick",
			"assetsManagerBaseLayout",
			"_listItemRightClicked",
			"_QMenuItemDelete",
			"_getAssetDirectory",
			"deleteFileFromPath",
			"getFilesFromPath",
			"self.sPath",
			"_getFoldersFromPath",
			"createFolder",
			"self.sPath",
			"cmds.warning",
			"currentIndex",
			"valid",
			"os.path.join",
			"_getAssetDirectory",
			"Input_create",
			"popWinRightClick",
			"dAssetData",
			"_listItemClick",
			"QListView_version",
			"SUBJECT",
			"addMail",
			"createMailModel",
			"setSourceModel",
			"iVersionCurrent",
			"sCurrentVersionName",
			"copyfile",
			"createVersionFile",
			"getAssetDirectory",
			"getGeoInfo",
			"_listItemClick",
			"getFilesFromPath",
			"checkbox",
			"bsListWidget",
			"listItemRightClicked",
			"QLayout",
			"listItemRightClicked_project",
			"self.QListView_project",
			"QListView",
			"fileList",
			"listItemRightClicked",
			"filterRegExpChanged_project",
			"setBaseLayout",
			"listItemRightClicked",
			"filterSyntaxComboBox",
			"filterSyntaxComboBox.itemData",
			"Changed",
			"textFilterChanged",
			"filterRegExpChanged",
			"addMail",
			"createMailModel",
			"setSourceModel",
			"QListVie",
			"filterPatternLabel",
			"cmds.warning"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"fEndTime",
			"fStartTime",
			"_writeFolderListFile",
			"sFolderList",
			"self.dAssetData",
			"QTreeView_version",
			"QListWidget"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "common/files.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2572,
						"regions":
						{
						},
						"selection":
						[
							[
								1838,
								1820
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2125.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "common/workspaces.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14842,
						"regions":
						{
						},
						"selection":
						[
							[
								368,
								354
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "riggingAPI/rigComponents.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 290,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								268
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "namingAPI/namingDict.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1561,
						"regions":
						{
						},
						"selection":
						[
							[
								1120,
								1120
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1632.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "namingAPI/naming.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 142,
						"regions":
						{
						},
						"selection":
						[
							[
								90,
								87
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "common/transforms.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 748,
						"regions":
						{
						},
						"selection":
						[
							[
								727,
								727
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 204.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "UI/assetsManagerUI.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16702,
						"regions":
						{
						},
						"selection":
						[
							[
								395,
								367
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 42.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pipelineMaya.sublime-project",
	"replace":
	{
		"height": 80.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
